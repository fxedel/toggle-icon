{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "An extremly powerful and customizable switch that looks like a paper-icon-button. Use `toggleIcon.checked` to get the toggle-icon's status in JavaScript.\n\nThe very basic usage without user feedback to show whether the switch is checked or not only needs the `icon` (or `icon-src`) property:\n\n    <toggle-icon icon=\"thumb-up\"></toggle-icon>\n\nSet `animation` to a space-seperated list of supported animations, which currently are `flip-vertical`, `flip-horizontal` and `rotate` (default rotation angle is 180deg, use `rotation` for other values).\n\n    <toggle-icon icon=\"thumb-up\" animation=\"flip-vertical\"></toggle-icon>\n    <toggle-icon icon=\"arrow-forward\" animation=\"rotate\" rotation=\"90\"></toggle-icon>\n\nUse `icon-checked` (or `icon-src-checked`) to change the icon while switching (there will be a smooth fading animation).\n\n    <toggle-icon icon=\"favorite-border\" icon-checked=\"favorite\"></toggle-icon>\n\n\n### Styling\n\nYou can style the paper-icon-buttons like usual by adding (custom) properties or mixins to the following mixins:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--toggle-icon` | Mixin for the toggle | `{}`\n`--toggle-icon-checked` | Mixin for the toggle when checked | `{}`\n`--toggle-icon-active` | _Used for backwards compatibility._ Same as --toggle-icon-checked | `{}`\n`--toggle-icon-buttons` | Mixin for the used paper-icon-buttons | `{}`\n\nCustom colors and backgrounds do animate if they change in checked state by using the CSS transition attribute.\n\n**Example:** This will add a green phone that rotates and turns red on click.\n\n    <style is=\"custom-style\">\n      .green-red {\n        --toggle-icon: {\n          color: var(--paper-green-500);\n        };\n        --toggle-icon-checked: {\n          color: var(--paper-red-500);\n        };\n      }\n    </style>\n\n    <toggle-icon\n      icon=\"communication:call\"\n      animation=\"rotate\"\n      rotation=\"135\"\n      class=\"green-red\">\n    </toggle-icon>",
      "summary": "",
      "path": "toggle-icon.html",
      "properties": [
        {
          "name": "name",
          "type": "string",
          "description": "The name of this element.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-form-element-behavior/iron-form-element-behavior.html",
            "start": {
              "line": 40,
              "column": 6
            },
            "end": {
              "line": 42,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronFormElementBehavior"
        },
        {
          "name": "value",
          "type": "string",
          "description": "Overriden from Polymer.IronFormElementBehavior",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-checked-element-behavior/iron-checked-element-behavior.html",
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 60,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_valueChanged\""
            }
          },
          "defaultValue": "\"on\"",
          "inheritedFrom": "Polymer.IronCheckedElementBehavior"
        },
        {
          "name": "required",
          "type": "boolean",
          "description": "Set to true to mark the input as required. If used in a form, a\ncustom element that uses this behavior should also use\nPolymer.IronValidatableBehavior and define a custom validation method.\nOtherwise, a `required` element will always be considered valid.\nIt's also strongly recommended to provide a visual style for the element\nwhen its value is invalid.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-form-element-behavior/iron-form-element-behavior.html",
            "start": {
              "line": 60,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronFormElementBehavior"
        },
        {
          "name": "_parentForm",
          "type": "Object",
          "description": "The form that the element is registered to.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-form-element-behavior/iron-form-element-behavior.html",
            "start": {
              "line": 68,
              "column": 6
            },
            "end": {
              "line": 70,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronFormElementBehavior"
        },
        {
          "name": "attached",
          "type": "Conditional",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-form-element-behavior/iron-form-element-behavior.html",
            "start": {
              "line": 73,
              "column": 4
            },
            "end": {
              "line": 77,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronFormElementBehavior"
        },
        {
          "name": "detached",
          "type": "Conditional",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-form-element-behavior/iron-form-element-behavior.html",
            "start": {
              "line": 79,
              "column": 4
            },
            "end": {
              "line": 83,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronFormElementBehavior"
        },
        {
          "name": "validator",
          "type": "string",
          "description": "Name of the validator to use.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 51,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "invalid",
          "type": "boolean",
          "description": "True if the last call to `validate` is invalid.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 62,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_invalidChanged\""
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "checked",
          "type": "boolean",
          "description": "Changes on click, like a checkbox. Doesn't change when disabled.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 6
            },
            "end": {
              "line": 130,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "toggles",
          "type": "boolean",
          "description": "If true, the button toggles the active state with each tap or press\nof the spacebar.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-checked-element-behavior/iron-checked-element-behavior.html",
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 53,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true",
          "inheritedFrom": "Polymer.IronCheckedElementBehavior"
        },
        {
          "name": "active",
          "type": "boolean",
          "description": "_Used for backwards compatibility._\nAlias for `checked`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 6
            },
            "end": {
              "line": 139,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_activeChanged\""
            }
          }
        },
        {
          "name": "animation",
          "type": "string",
          "description": "Specifies how to transform the content.\nAllowed modes: `flip-vertical`, `flip-horizontal`, `rotate`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 6
            },
            "end": {
              "line": 147,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "rotation",
          "type": "number",
          "description": "Specifies the degrees when `animation` contains `rotate`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 6
            },
            "end": {
              "line": 155,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "180"
        },
        {
          "name": "icon",
          "type": "string",
          "description": "The name of the icon to use. The name should be of the form: `iconset_name:icon_name` (omit the iconset name when using the default set). See [iron-icon](https://elements.polymer-project.org/elements/iron-icon).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 160,
              "column": 6
            },
            "end": {
              "line": 162,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "iconChecked",
          "type": "string",
          "description": "Like `icon`, but only used when checked.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 6
            },
            "end": {
              "line": 170,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"\""
        },
        {
          "name": "iconActive",
          "type": "string",
          "description": "_Used for backwards compatibility._\nAlias for `iconChecked`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 176,
              "column": 6
            },
            "end": {
              "line": 179,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "null"
        },
        {
          "name": "iconSrc",
          "type": "string",
          "description": "If using iron-icon without an iconset, you can set the src to be the URL of an individual icon image file. Note that this will take precedence over a given icon attribute. See [iron-icon](https://elements.polymer-project.org/elements/iron-icon).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 6
            },
            "end": {
              "line": 186,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "iconSrcChecked",
          "type": "string",
          "description": "Like `iconSrc`, but only used when checked.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 191,
              "column": 6
            },
            "end": {
              "line": 194,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"\""
        },
        {
          "name": "iconSrcActive",
          "type": "string",
          "description": "_Used for backwards compatibility._\nAlias for `iconSrcChecked`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 6
            },
            "end": {
              "line": 203,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "null"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "Set to `true` to disable the toggle.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 208,
              "column": 6
            },
            "end": {
              "line": 211,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "registered",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 65,
              "column": 4
            },
            "end": {
              "line": 67,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "_invalidChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 69,
              "column": 4
            },
            "end": {
              "line": 75,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "_validator",
          "description": "Recompute this every time it's needed, because we don't know if the\nunderlying IronValidatableBehaviorMeta has changed.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 79,
              "column": 4
            },
            "end": {
              "line": 82,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "hasValidator",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 87,
              "column": 4
            },
            "end": {
              "line": 89,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "boolean",
            "desc": "True if the validator `validator` exists."
          },
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "validate",
          "description": "Returns true if the `value` is valid, and updates `invalid`. If you want\nyour element to have custom validation logic, do not override this method;\noverride `_getValidity(value)` instead.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 102,
              "column": 4
            },
            "end": {
              "line": 110,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "Deprecated: The value to be validated. By default,\nit is passed to the validator's `validate()` function, if a validator is set.\nIf this argument is not specified, then the element's `value` property\nis used, if it exists."
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if `value` is valid."
          },
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "_getValidity",
          "description": "Returns false if the element is required and not checked, and true otherwise.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-checked-element-behavior/iron-checked-element-behavior.html",
            "start": {
              "line": 79,
              "column": 4
            },
            "end": {
              "line": 81,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_value",
              "type": "*=",
              "description": "Ignored."
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "true if `required` is false or if `checked` is true."
          },
          "inheritedFrom": "Polymer.IronCheckedElementBehavior"
        },
        {
          "name": "created",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-checked-element-behavior/iron-checked-element-behavior.html",
            "start": {
              "line": 67,
              "column": 4
            },
            "end": {
              "line": 72,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronCheckedElementBehavior"
        },
        {
          "name": "_requiredChanged",
          "description": "Update the aria-required label when `required` is changed.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-checked-element-behavior/iron-checked-element-behavior.html",
            "start": {
              "line": 86,
              "column": 4
            },
            "end": {
              "line": 92,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronCheckedElementBehavior"
        },
        {
          "name": "_checkedChanged",
          "description": "If element is checked, apply CSS transforms (specified in `animation`).",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 277,
              "column": 4
            },
            "end": {
              "line": 280,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_valueChanged",
          "description": "Reset value to 'on' if it is set to `undefined`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-checked-element-behavior/iron-checked-element-behavior.html",
            "start": {
              "line": 105,
              "column": 4
            },
            "end": {
              "line": 109,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronCheckedElementBehavior"
        },
        {
          "name": "toggleChecked",
          "description": "Toggle `checked`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 229,
              "column": 4
            },
            "end": {
              "line": 233,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_computeIconChecked",
          "description": "Compute and return the checked paper-icon-button's `icon` property.\nUse `iconChecked` if present, else `iconActive` if present (_used for backwards compatibility_), else `icon`.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 4
            },
            "end": {
              "line": 241,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "icon"
            },
            {
              "name": "iconChecked"
            },
            {
              "name": "iconActive"
            }
          ]
        },
        {
          "name": "_computeIconSrcChecked",
          "description": "Compute and return the checked paper-icon-button's `src` property.\nUse `iconSrcChecked` if present, else `iconSrcActive` if present (_used for backwards compatibility_), else `iconSrc`.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 247,
              "column": 4
            },
            "end": {
              "line": 249,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "iconSrc"
            },
            {
              "name": "iconSrcChecked"
            },
            {
              "name": "iconSrcActive"
            }
          ]
        },
        {
          "name": "_computeTransform",
          "description": "Compute the transform property depending on the specified animations in `animation`.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 254,
              "column": 4
            },
            "end": {
              "line": 272,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_activeChanged",
          "description": "_Used for backwards compatibility._\nWhen `active` changes, set `checked` to this value",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 286,
              "column": 4
            },
            "end": {
              "line": 288,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 119,
          "column": 10
        },
        "end": {
          "line": 289,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "name",
          "description": "The name of this element.",
          "sourceRange": {
            "file": "bower_components/iron-form-element-behavior/iron-form-element-behavior.html",
            "start": {
              "line": 40,
              "column": 6
            },
            "end": {
              "line": 42,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.IronFormElementBehavior"
        },
        {
          "name": "value",
          "description": "Overriden from Polymer.IronFormElementBehavior",
          "sourceRange": {
            "file": "bower_components/iron-checked-element-behavior/iron-checked-element-behavior.html",
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 60,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.IronCheckedElementBehavior"
        },
        {
          "name": "required",
          "description": "Set to true to mark the input as required. If used in a form, a\ncustom element that uses this behavior should also use\nPolymer.IronValidatableBehavior and define a custom validation method.\nOtherwise, a `required` element will always be considered valid.\nIt's also strongly recommended to provide a visual style for the element\nwhen its value is invalid.",
          "sourceRange": {
            "file": "bower_components/iron-form-element-behavior/iron-form-element-behavior.html",
            "start": {
              "line": 60,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronFormElementBehavior"
        },
        {
          "name": "validator",
          "description": "Name of the validator to use.",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 51,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "invalid",
          "description": "True if the last call to `validate` is invalid.",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 62,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "checked",
          "description": "Changes on click, like a checkbox. Doesn't change when disabled.",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 6
            },
            "end": {
              "line": 130,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "toggles",
          "description": "If true, the button toggles the active state with each tap or press\nof the spacebar.",
          "sourceRange": {
            "file": "bower_components/iron-checked-element-behavior/iron-checked-element-behavior.html",
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 53,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronCheckedElementBehavior"
        },
        {
          "name": "active",
          "description": "_Used for backwards compatibility._\nAlias for `checked`",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 6
            },
            "end": {
              "line": 139,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "animation",
          "description": "Specifies how to transform the content.\nAllowed modes: `flip-vertical`, `flip-horizontal`, `rotate`",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 6
            },
            "end": {
              "line": 147,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "rotation",
          "description": "Specifies the degrees when `animation` contains `rotate`.",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 6
            },
            "end": {
              "line": 155,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "icon",
          "description": "The name of the icon to use. The name should be of the form: `iconset_name:icon_name` (omit the iconset name when using the default set). See [iron-icon](https://elements.polymer-project.org/elements/iron-icon).",
          "sourceRange": {
            "start": {
              "line": 160,
              "column": 6
            },
            "end": {
              "line": 162,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "icon-checked",
          "description": "Like `icon`, but only used when checked.",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 6
            },
            "end": {
              "line": 170,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "icon-active",
          "description": "_Used for backwards compatibility._\nAlias for `iconChecked`",
          "sourceRange": {
            "start": {
              "line": 176,
              "column": 6
            },
            "end": {
              "line": 179,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "icon-src",
          "description": "If using iron-icon without an iconset, you can set the src to be the URL of an individual icon image file. Note that this will take precedence over a given icon attribute. See [iron-icon](https://elements.polymer-project.org/elements/iron-icon).",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 6
            },
            "end": {
              "line": 186,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "icon-src-checked",
          "description": "Like `iconSrc`, but only used when checked.",
          "sourceRange": {
            "start": {
              "line": 191,
              "column": 6
            },
            "end": {
              "line": 194,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "icon-src-active",
          "description": "_Used for backwards compatibility._\nAlias for `iconSrcChecked`",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 6
            },
            "end": {
              "line": 203,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Set to `true` to disable the toggle.",
          "sourceRange": {
            "start": {
              "line": 208,
              "column": 6
            },
            "end": {
              "line": 211,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "iron-form-element-register",
          "description": "iron-form-element-register",
          "metadata": {},
          "inheritedFrom": "Polymer.IronFormElementBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "iron-form-element-unregister",
          "description": "iron-form-element-unregister",
          "metadata": {},
          "inheritedFrom": "Polymer.IronFormElementBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {},
          "inheritedFrom": "Polymer.IronFormElementBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "invalid-changed",
          "description": "Fired when the `invalid` property changes.",
          "metadata": {},
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "iron-change",
          "description": "iron-change",
          "metadata": {},
          "inheritedFrom": "Polymer.IronCheckedElementBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "checked-changed",
          "description": "Fired when the `checked` property changes.",
          "metadata": {},
          "inheritedFrom": "Polymer.IronCheckedElementBehavior"
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "toggle-icon"
    }
  ]
}
